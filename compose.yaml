# Docker Compose file for local development only
#
# Disclaimer:
#   This is NOT SECURE, and should only be used with data that is not sensitive.
#   Currently unified search only imports open public data, but if this ever
#   changes, the setup should be made more secure!
services:
  sources:
    env_file: .env
    build:
      context: ./sources
      target: ${DOCKER_TARGET:-development}  # target Dockerfile stage
    ports:
      - "5001:5001"
    environment:
      APPLY_MIGRATIONS: 1
    restart: unless-stopped
    volumes:
      - ./sources:/app
      # Exclude directories to avoid host/container incompatibility & permission issues:
      - /app/db_data
      - /app/.pytest_cache

  search-api:
    env_file: .env
    build:
      context: ./graphql
      target: ${DOCKER_TARGET:-development}  # target Dockerfile stage
    environment:
      NODE_ENV: ${DOCKER_TARGET:-development} # which node env the build uses. NOTE: Usually same as the ${DOCKER_TARGET}.
    volumes:
      - ./graphql:/app
      # Exclude directories to avoid host/container incompatibility & permission issues:
      - /app/node_modules
    ports:
      - "4000:4000"
    restart: unless-stopped

  elasticsearch-node1:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.1.3
    container_name: elasticsearch-node1
    environment:
      - cluster.name=elasticsearch-cluster
      - action.destructive_requires_name=false  # allow wildcard index deletes (e.g. "test_*") for tests
      - node.name=elasticsearch-node1
      - discovery.type=single-node
      - bootstrap.memory_lock=false  # disabled because doesn't work on macOS -> thus, swapping is enabled
      - "xpack.security.enabled=false" # disables security entirely in Elasticsearch (only for local development!)
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the Elasticsearch user, set to at least 65536 on modern systems
        hard: 65536
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data1:/usr/share/elasticsearch/data

  kibana:
    depends_on:
      - elasticsearch-node1
    image: docker.elastic.co/kibana/kibana:9.1.3
    container_name: kibana
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      - 'ELASTICSEARCH_HOSTS=["http://elasticsearch-node1:9200"]'

volumes:
  elasticsearch-data1:
    driver: local

networks:
    default:
        name: helsinki
